import asyncio
import os
import aiohttp
from gidgethub.aiohttp import GitHubAPI

async def main():
    async with aiohttp.ClientSession() as session:
        gh = GitHubAPI(session, "ananya", oauth_token=os.getenv("GH_AUTH"))
        await gh.post('/repos/ananya/strange-relationship/issues',
                      data={
                          'title': 'We got a problem',
                          'body': 'Use more emoji!',
                      })
asyncio.run(main())

from mergebot_frontend import db


class WorkItemStatus(db.Model):
    """WorkItemStatus has necessary information about updates to work items."""
    id = db.Column(db.Integer, primary_key=True)
    project_name = db.Column(db.String(80))
    item_id = db.Column(db.Integer)
    timestamp = db.Column(db.DateTime)
    status = db.Column(db.String(200))
    info = db.Column(db.String(200))

    def __init__(self, project_name, item_id, timestamp, status, info):
        self.project_name = project_name
        self.item_id = item_id
        self.timestamp = timestamp
        self.status = status
        self.info = info

    def __repr__(self):
        return ('Project: {proj}, Item ID: {item}, Status: {status}, '
                'Timestamp: {timestamp}. Info: {info}'.format(
                    proj=self.project_name,
                    item=self.item_id,
                    status=self.status,
                    timestamp=self.timestamp,
                    info=self.info))




   
